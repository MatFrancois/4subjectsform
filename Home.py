import streamlit as st
import pymongo
import time
import webbrowser


def switch_page(page_name: str):
    from streamlit import _RerunData, _RerunException
    from streamlit.source_util import get_pages

    def standardize_name(name: str) -> str:
        return name.lower().replace("_", " ")
    page_name = standardize_name(page_name)

    pages = get_pages("Home.py")  # OR whatever your main page is called

    for page_hash, config in pages.items():
        #print(config["page_name"], standardize_name(config["page_name"]))
        if standardize_name(config["page_name"]) == page_name:
            raise _RerunException(
                _RerunData(
                    page_script_hash=page_hash,
                    page_name=page_name,
                )
            )

    page_names = [standardize_name(config["page_name"]) for config in pages.values()]

    raise ValueError(f"Could not find page {page_name}. Must be one of {page_names}")

st.set_page_config(
     page_title="Fen√™tre d'Overton & Social Computing",
     page_icon="üßä",
     layout="wide",
     initial_sidebar_state="collapsed",
 )

# Initialize connection.
# Uses st.experimental_singleton to only run once.
@st.experimental_singleton
def init_connection():
    address = st.secrets["mongo"].get('client')
    return pymongo.MongoClient(address)['green']["4subjects_form"]


#@st.cache(allow_output_mutation=True)
def get_unique_id():
    id_session = str(time.time())
    st.session_state['username'] = id_session
    st.session_state['id_session'] = id_session
    #username = st.experimental_get_query_params().get('username')[0] if "username" in st.experimental_get_query_params().keys() else None
    #return username, str(time.time()) # http://localhost:8501/?username=toto
#  ====================================================

collection = init_connection()
modalities = (
    'Impensable',
    'Radical',
    'Acceptable',
    'Raisonnable',
    'Populaire',
    'D√©j√† int√©gr√© comme politique publique',
)

st.title("Fen√™tre d'Overton")
st.markdown('''
#### _Ou l'√©tude de l'acceptabilit√© d'un sujet dans notre soci√©t√©..._
---
''')
st.sidebar.image('imgs/logo.png')

# Intro
_, col, _ = st.columns([1,3,1])

if 'id_session' not in st.session_state:
    col.markdown('''
    Observez et √©valuez les pr√©dictions automatiques du positionnement des influenceurs sur Twitter pendant la campagne pr√©didentielle de 2017.

    Premi√®rement, donnez votre opinion pour nous permettre de controler les biais de l'√©valuation.
    ''')
    #username = col.text_input('Renseignez votre Username twitter ou inventez un login', value="")
    col.button("Ok!", on_click=get_unique_id)

if 'id_session' in st.session_state:

  col.markdown('''---
  **Comment √©valuez-vous ces diff√©rents choix de soci√©t√© ?**
  ''')

  #¬†rajouter des phrases de climatosceptiques ?

  rep6 = col.radio(
      "La d√©croissance (par opposition √† la croissance √©conomique)",
      modalities,
      horizontal=True
  )

  #col.markdown('Voici la d√©finition de croissance verte selon [OECD](https://www.oecd.org/fr/croissanceverte/quest-cequelacroissanceverteetcommentpeut-elleaideraassurerundeveloppementdurable.htm).')
  #col.info('La **croissance verte** signifie *promouvoir la croissance √©conomique et le d√©veloppement* tout en veillant √† ce que les actifs naturels continuent de fournir les ressources et services environnementaux dont d√©pend notre bien-√™tre.')
  rep7 = col.radio(
      "La diminution du transport a√©rien",
      modalities,
      horizontal=True
  )

  rep8 = col.radio(
      "La diminution de la consommation de viande.",
      modalities,
      horizontal=True
  )

  rep9 = col.radio(
      "Le d√©veloppement de l'√©nergie nucl√©aire.",
      modalities,
      horizontal=True
  )
  col.markdown('''---''')
  submitted = col.button("Soumettre & Annoter")
  # cr√©ation du json de r√©ponses
  if submitted:
      mydict = {
          'time': st.session_state['id_session'],
          'login':st.session_state['username'],
          "rep6": rep6,
          "rep7": rep7,
          "rep8": rep8,
          "rep9": rep9,
      }
      # envoie des donn√©es et redirection vers la page d'annotations
      collection.insert_one(mydict)
      st.success('Votre contribution a bien √©t√© enregistr√©e ! Merci')
      switch_page('Proposition du mod√®le')
      print('done')
